* Global Settings
** Appearance
Disable the menu-bar, tool-bar, and scroll-bar.
#+BEGIN_SRC emacs-lisp
  (menu-bar-mode 0)
  (tool-bar-mode 0)
  (scroll-bar-mode 0)
#+END_SRC

Load a default theme.
#+BEGIN_SRC emacs-lisp
  (load-theme 'wombat)
#+END_SRC

Show matching parens.
#+BEGIN_SRC emacs-lisp
  (show-paren-mode 1)
#+END_SRC
** Initial buffers
Turn off the startup message with the Emacs logo.
#+BEGIN_SRC emacs-lisp
  (setq inhibit-startup-message t)
#+END_SRC

Remove default text from the =*scratch*= buffer.
#+BEGIN_SRC emacs-lisp
  (setq initial-scratch-message "")
#+END_SRC
** Packages
Set up Melpa according to its [[http://melpa.org/#/getting-started][Getting Started]] instructions.
#+BEGIN_SRC emacs-lisp
  (require 'package)
  (setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                           ("melpa" . "http://melpa.org/packages/")))
  (package-initialize)
#+END_SRC

Update the package archive if it's empty.
#+BEGIN_SRC emacs-lisp
  (unless package-archive-contents
    (package-refresh-contents))
#+END_SRC
* Org mode
Upon entering org-mode, whether manually or by opening an org file,
render a cleaner outline view with more indentation and fewer leading
stars in headers.
#+BEGIN_SRC emacs-lisp
  (setq org-startup-indented t)
#+END_SRC

Turn on automatic line breaking and spell checking.
#+BEGIN_SRC emacs-lisp
  (add-hook 'org-mode-hook 'auto-fill-mode)
  (add-hook 'org-mode-hook 'flyspell-mode)
#+END_SRC
** TODO Consider using =variable-pitch-mode=
A non-monospace font would be used instead.

This would require exceptions for SRC blocks and [[http://stackoverflow.com/questions/3758139/variable-pitch-for-org-mode-fixed-pitch-for-tables][tables]]. I assume in
non-graphical sessions it gracefully falls back to monospace, but
that's also worth checking.
* Magit mode
Install magit.
#+BEGIN_SRC emacs-lisp
  (package-install 'magit)
#+END_SRC

After my first magit commit (v1.4.0) I was shown a warning about
potential dataloss.
#+BEGIN_QUOTE
Before running Git, Magit by default reverts all unmodified
buffers which visit files tracked in the current repository.
This can potentially lead to dataloss so you might want to
disable this by adding the following line to your init file:

  (setq magit-auto-revert-mode nil)
#+END_QUOTE

I'm disabling =magit-auto-revert-mode=.
#+BEGIN_SRC emacs-lisp
  (setq magit-auto-revert-mode nil)
  (setq magit-last-seen-setup-instructions "1.4.0")
#+END_SRC
* Rust mode
Install Rust support.
#+BEGIN_SRC emacs-lisp
  (package-install 'rust-mode)
#+END_SRC
* SLIME
#+BEGIN_SRC emacs-lisp
  (package-install 'slime)
  (setq inferior-lisp-program "/usr/local/bin/ccl")
  (setq slime-contribs '(slime-fancy))
* Aurel
#+BEGIN_SRC emacs-lisp
  (autoload 'aurel-package-info "aurel" nil t)
  (autoload 'aurel-package-search "aurel" nil t)
  (autoload 'aurel-maintainer-search "aurel" nil t)
  (autoload 'aurel-installed-packages "aurel" nil t)

  (setq aurel-download-directory "~/abs")
#+END_SRC
* Pain points
** DONE Elisp isn't showing matching parens
The opening paren corresponding to the current closing paren should be
visually highlighted somehow.

Fixed by turning on =show-paren-mode= globally.
** TODO Flyspell isn't working out of the box
At least on my OS X machine flyspell-mode isn't loading properly. May
be an issue on Linux and Windows too.

Install any necessary dependencies and wire up the configuration as
needed. Consider automating the process in elisp so I don't have to do
it again manually in the future.
** TODO Helm's windows are too large
When I have two windows and do anything to invoke Helm, the Helm
buffer completely covers the non-active window. If there's only one
window, Helm's window takes up half the frame.

It really doesn't need to take up so much space when its fuzzy
matching and navigation features are so good.
** TODO Kill multiple buffers using Helm
There's probably a reasonable way to do this without any configuration
changes, but I haven't figured it out yet.

When I invoke =kill-buffer= (=C-x k=) a Helm window pops up so I can
choose which buffer to kill. I can mark multiple buffers using
=C-SPC=, but it's not clear whether I can then kill all the marked
buffers. I also tried running the =kill-some-buffers= command, but it
doesn't trigger Helm.
** TODO No key bound to =magit-status=
Easy to fix, but I'd like to wait to see what other unbound commands I
frequently use.
** TODO Determine what commands I use most frequently that have no keybinding
There may be a package out there to help with this. If not, it should
be easy to implement.
